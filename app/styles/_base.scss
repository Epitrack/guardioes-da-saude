// ——————————————————————————————————————————————————————————————————————————
//               Base: Variables, Mixins & Utilities
// ——————————————————————————————————————————————————————————————————————————

// ——————————————
//     Colors
// ——————————————

// Hexadecimals
$blue-dark:                          #01579B; // header
$blue-light:                         #1E88E5; // some fonts
$blue-transparent:                   #90CAF9; // some fonts (survey title)
$blue-darker:                        #395185; // facebook button
$blue-acqua:                         #5879F4; // google button
$green-acqua:                        #5E9FCA; // twitter button
$white:                              #FFFFFF; // some fonts
$black:                              #000000; // natural black
$gray:                               #CCCCCC; // some border
$gray-light:                         #979797; // some border
$gray-clean:                         #D9E0E7; // internal background
$gray-smooth:                        #A9A9A9; // name of the week's day on the calendar directive
$black-clean:                        #7E7E7E; // background when modal is open
$black-light:                        #4C4C4C; // some fonts
$black-ligthen:                      #D7D7D7; // some backgrounds

// RGB
$blue-dark-rgb:                      rgb(1,87,155);
$blue-light-rgb:                     rgb(30,136,229);
$blue-transparent-rgb:               rgb(144,202,249);
$blue-darker-rgb:                    rgb(57,81,133);
$blue-acqua-rgb:                     rgb(88,121,244);
$green-acqua-rgb:                    rgb(94,159,202);
$white-rgb:                          rgb(255,255,255);
$black-rgb:                          rgb(0,0,0);
$gray-rgb:                           rgb(204,204,204);
$gray-light-rgb:                     rgb(151,151,151);
$gray-clean-rgb:                     rgb(217,224,231);
$gray-smooth-rgb:                    rgb(169,169,169);
$black-clean-rgb:                    rgb(126,126,126);
$black-light-rgb:                    rgb(76,76,76);
$black-ligthen-rgb:                  rgb(215,215,215);

// Names
$bg-header:                          $blue-dark;
$btn-primary:                        $blue-light;
$survey-title:                       $blue-transparent;
$btn-facebook:                       $blue-darker;
$btn-google:                         $blue-acqua;
$btn-twitter:                        $green-acqua;
$link-primary:                       $white;
$natural-black:                      $black;
$border-secondary:                   $gray;
$border-primary:                     $gray-light;
$bg-section:                         $gray-clean;
$bg-modal:                           $black-clean;
$font-primary:                       $black-light;
$bg-secondary:                       $black-ligthen;
$week-days-color:                    $gray-smooth;


// ——————————————————————
//     Mixins
// ——————————————————————



// Background Images
@mixin path ($rulers...) {
  background-image: url("../images/"+$rulers);
}

@mixin rgba ($color, $alpha) {
  background-color: rgba($color, $alpha);
}

//
// Gradient
//

@mixin linear-gradient ($angle, $startColor, $endColor) {
  background-color: $startColor;
  background-image: -webkit-linear-gradient($angle, $startColor, $endColor);
  background-image:    -moz-linear-gradient($angle, $startColor, $endColor);
  background-image:     -ms-linear-gradient($angle, $startColor, $endColor);
  background-image:      -o-linear-gradient($angle, $startColor, $endColor);
  background-image:         linear-gradient($angle, $startColor, $endColor);
}

@mixin linear-gradient-control($angle, $colour, $position, $colour2, $position2) {
 background-color:  $colour;
 background-image:  -webkit-linear-gradient($angle, $colour $position, $colour2 $position2);
  background-image:    -moz-linear-gradient($angle, $colour $position, $colour2 $position2);
  background-image:     -ms-linear-gradient($angle, $colour $position, $colour2 $position2);
  background-image:      -o-linear-gradient($angle, $colour $position, $colour2 $position2);
  background-image:          linear-gradient($angle, $colour $position, $colour2 $position2);
}

// Text Truncate
@mixin truncate {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

// Transition
@mixin transition($property, $time, $method, $delay){
  -webkit-transition: $property $time $method $delay;
     -moz-transition: $property $time $method $delay;
      -ms-transition: $property $time $method $delay;
       -o-transition: $property $time $method $delay;
          transition: $property $time $method $delay;
}

// Border-Radius
@mixin bdr($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
       -o-border-radius: $radius;
          border-radius: $radius;
}

//
// Shadow
//

// box-shadow
@mixin bsd($x, $y, $blur, $color) {
  -webkit-box-shadow: $x $y $blur $color;
     -moz-box-shadow: $x $y $blur $color;
      -ms-box-shadow: $x $y $blur $color;
       -o-box-shadow: $x $y $blur $color;
          box-shadow: $x $y $blur $color;
}

@mixin bsd-multiples($rulers...) {
  -webkit-box-shadow: $rulers;
     -moz-box-shadow: $rulers;
      -ms-box-shadow: $rulers;
       -o-box-shadow: $rulers;
          box-shadow: $rulers;
}

// text-shadow
@mixin tsd($x, $y, $blur, $color) {
  -webkit-text-shadow: $x $y $blur $color;
     -moz-text-shadow: $x $y $blur $color;
      -ms-text-shadow: $x $y $blur $color;
       -o-text-shadow: $x $y $blur $color;
          text-shadow: $x $y $blur $color;
}

//
// Translate
//

// translateY
@mixin translateY($value) {
  -webkit-transform: translateY($value);
     -moz-transform: translateY($value);
      -ms-transform: translateY($value);
       -o-transform: translateY($value);
          transform: translateY($value);
}

// translateX
@mixin translateX($value) {
  -webkit-transform: translateX($value);
     -moz-transform: translateX($value);
      -ms-transform: translateX($value);
       -o-transform: translateX($value);
          transform: translateX($value);
}

// translate3d
@mixin translate3d($valueX, $valueY, $valueZ) {
  -webkit-transform: translate3d($valueX, $valueY, $valueZ);
     -moz-transform: translate3d($valueX, $valueY, $valueZ);
      -ms-transform: translate3d($valueX, $valueY, $valueZ);
       -o-transform: translate3d($valueX, $valueY, $valueZ);
          transform: translate3d($valueX, $valueY, $valueZ);
}

// skew
@mixin skew($rulers...) {
  -webkit-transform: skew($rulers);
     -moz-transform: skew($rulers);
      -ms-transform: skew($rulers);
       -o-transform: skew($rulers);
          transform: skew($rulers);
}

// rotate
@mixin rotate($value) {
  -webkit-transform: rotate($value);
     -moz-transform: rotate($value);
      -ms-transform: rotate($value);
       -o-transform: rotate($value);
          transform: rotate($value);
}

// transform-origin
@mixin origin($value) {
  -webkit-transform-origin: $value;
     -moz-transform-origin: $value;
      -ms-transform-origin: $value;
       -o-transform-origin: $value;
          transform-origin: $value;
}

// scale
@mixin scale3d($rulers...) {
  -webkit-transform: scale($rulers);
     -moz-transform: scale($rulers);
      -ms-transform: scale($rulers);
       -o-transform: scale($rulers);
          transform: scale($rulers);
}

// animation
@mixin animation($rulers...){
  -webkit-animation: $rulers;
     -moz-animation: $rulers;
      -ms-animation: $rulers;
       -o-animation: $rulers;
          animation: $rulers;
}

// appearance
@mixin apr($value) {
  -webkit-appearance: $value;
     -moz-appearance: $value;
      -ms-appearance: $value;
       -o-appearance: $value;
          appearance: $value;
}


//
// Organizes
//

%social {
  display: inline-block;
  width: 34px;
  height: 34px;
  background-color: #FFFFFF;
  margin-right: 0;
  vertical-align: middle;
  background-repeat: no-repeat;
  background-size: 80%;
  background-position: center center;
  text-indent: -9999px;
  @include bdr(100%);
}

@mixin social ($type) {
  @extend %social;

  @if $type == 'facebook' {
    @include path('icon-facebook.svg');
  }
  @else if $type == 'twitter' {
    @include path('icon-twitter.svg');
  }
  @else if $type == 'google-plus' {
    @include path('icon-google-plus.svg');
  }
}

// Inputs of change photo
@for $i from 01 through 12 {
  .avatar-#{$i} {
    i { @include path('avatar/avatar-'+ $i + '.svg'); }
  }
}
